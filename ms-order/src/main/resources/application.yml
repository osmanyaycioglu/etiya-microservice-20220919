spring:
  config:
    import: configserver:http://127.0.0.1:8888
  application:
    name: order
  cloud:
    loadbalancer:
      retry:
        enabled: true
        max-retries-on-same-service-instance: 0
        max-retries-on-next-service-instance: 3
        avoid-previous-instance: true
        retry-on-all-operations: true
server:
  port: ${PORT:10000}
resilience4j:
  retry:
    instances:
      accounting_retry:
        max-attempts: 2
        wait-duration: '1ms'
        retry-exception-predicate: 'org.training.etiya.ms.order.ChooseRetryWithException'
        result-predicate: 'org.training.etiya.ms.order.ChooseRetryWithResult'
  circuitbreaker:
    instances:
      accounting_cb:
        sliding-window-type: count-based
        sliding-window-size: 20
        minimum-number-of-calls: 10
        failure-rate-threshold: 30
        wait-duration-in-open-state: '2s'
        automatic-transition-from-open-to-half-open-enabled: false
        permitted-number-of-calls-in-half-open-state: 10
        max-wait-duration-in-half-open-state: '10s'
        slow-call-duration-threshold: 500
        slow-call-rate-threshold: 90
management:
  info:
    build:
      enabled: true
    defaults:
      enabled: true
    git:
      enabled: true
      mode: full
    java:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    info:
      enabled: true
info:
  osman:
    test: 'test1'
  app:
    ver: '1.0.1'
    commit: 10
    tag: 'TAG_R1'
    pomversion: @project.version@
    port: ${server.port}
